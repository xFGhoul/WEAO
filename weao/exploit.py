from typing import Dict, Tuple

from .platform import Platform

__all__: Tuple[str, ...] = (
    "Exploit",
    "Synapse",
    "ScriptWare",
    "Krnl",
    "Dx9Ware",
    "Electron",
    "WeAreDevs",
    "OxygenU",
    "Fluxus",
    "Celestial",
    "Comet",
    "Elexe",
    "Hydrogen",
)


class Exploit:
    """
    Class Interface Containing Exploit Attributes

    Attributes
    ----------
    webiste: :class:`str`
        Exploit Website URL
    discord: :class:`str`
        Exploit Discord URL
    v3rmillion: :class:`str`
        Exploit V3rmillion post
    download_url: :class:`str`
        Exploit Download URL
    type: :class:`bool`
        Type of Exploit, Script, Executor, or Both.
    platform: :class:`str`
        Supported Platform of Exploit
    """

    __slots__: Tuple[str, ...] = (
        "website",
        "discord",
        "v3rmillion",
        "download_url",
        "type",
        "platform",
    )

    def __init__(self, data: Dict) -> None:
        self.website: str = data.get("web")
        self.discord: str = data.get("disc")
        self.v3rmillion: str = data.get("v3rm")
        self.download_url: str = data.get("dl")
        self.type: str = data.get("type")
        self.platform: Platform = data.get("platform")

    def __repr__(self) -> str:
        return f"<Exploit website={self.website!r}>"


class Synapse(Exploit):
    ...


class ScriptWare(Exploit):
    ...


class Krnl(Exploit):
    ...


class Dx9Ware(Exploit):
    ...


class Electron(Exploit):
    ...


class WeAreDevs(Exploit):
    ...


class OxygenU(Exploit):
    ...


class Fluxus(Exploit):
    ...


class Celestial(Exploit):
    ...


class Comet(Exploit):
    ...


class Elexe(Exploit):
    ...


class Hydrogen(Exploit):
    ...
